---
# Default values for datacater.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

datacater:
  database:
    host: "postgres-postgresql:5432/postgres"
    username: datacater
    password: datacater
  deployment:
    image: "datacater/pipeline:2023.1"
  transforms:
    path: "/datacater/transforms"
  filters:
    path: "/datacater/filters"
  pythonrunner:
    name: "python-runner"
    image:
      repository: "datacater/python-runner"
      pullPolicy: IfNotPresent
      tag: "2023.1"
    replicas: 10
    serviceName: "pythonrunner"
    resources:
      requests:
        cpu: 0.05
        memory: 100Mi
      limits:
        memory: 100Mi
  ui:
    image:
      repository: datacater/ui
      pullPolicy: IfNotPresent
      tag: "2023.1"
    service:
      type: ClusterIP

image:
  repository: datacater/datacater
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2023.1"

# GitHub personal access tokens will be used until we publish to docker io
# Follow instructions -> https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#authenticating-to-the-container-registry
# Create secret via
# kubectl create secret docker-registry github-pat --docker-username=USERNAME \
#                                                  --docker-password=PAT \
#                                                  --docker-server=ghcr.io
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: 'datacater'

extraEnv: []
  #env:
  #  - name: QUARKUS_DATASOURCE_USERNAME
  #    value: datacater
  #  - name: QUARKUS_DATASOURCE_PASSWORD
  #    value: datacater
  #  - name: DATACATER_DEPLOYMENT_NAMESPACE
  #    value: {{ .Release.Namespace }}
  #  - name: DATACATER_DEPLOYMENT_IMAGE
  #    value: "datacater/pipeline:a835f7248af45f92427180f69652d656b92f8ba0"
  #  - name: DATACATER_TRANSFORMS_PATH
  #    value: "/datacater/transforms"
  #  - name: DATACATER_FILTERS_PATH
  #    value: "/datacater/filters"
  #  - name: DATACATER_PYTHONRUNNER_REPLICAS
  #    value: "10"
  #  - name: DATACATER_PYTHONRUNNER_IMAGE_NAME
  #    value: 'datacater/python-runner'
  #  - name: DATACATER_PYTHONRUNNER_IMAGE_VERSION
  #    value: 'a835f7248af45f92427180f69652d656b92f8ba0'
  #  - name: QUARKUS_LOG_CONSOLE_JSON
  #    value: "false"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

postgres:
  enabled: false
  username: ''   # postgres will be used by default
  password: ''   # datacater will be used by default
  pvc:
    volumeMountsName: postgres
    storageClassName: default

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ''
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  # - secretName: chart-example-tls
  #   hosts:
  #     - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 200m
    memory: 1Gi
  limits:
    memory: 1Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

helmLabels:
  enabled: true
